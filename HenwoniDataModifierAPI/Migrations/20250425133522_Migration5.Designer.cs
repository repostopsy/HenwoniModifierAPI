// <auto-generated />
using System;
using HenwoniDataModifierAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HenwoniDataModifierAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250425133522_Migration5")]
    partial class Migration5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CandidateSkillJobIndustry", b =>
                {
                    b.Property<long>("JobIndustriesId")
                        .HasColumnType("bigint");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("JobIndustriesId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CandidateSkillJobIndustry");
                });

            modelBuilder.Entity("CommonServiceReferenceServiceCategory", b =>
                {
                    b.Property<long>("CommonServiceReferencesId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServiceCategoriesId")
                        .HasColumnType("bigint");

                    b.HasKey("CommonServiceReferencesId", "ServiceCategoriesId");

                    b.HasIndex("ServiceCategoriesId");

                    b.ToTable("CommonServiceReferenceServiceCategory");
                });

            modelBuilder.Entity("CountryCountryTimeZone", b =>
                {
                    b.Property<long>("CountriesId")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeZonesId")
                        .HasColumnType("bigint");

                    b.HasKey("CountriesId", "TimeZonesId");

                    b.HasIndex("TimeZonesId");

                    b.ToTable("CountryCountryTimeZone");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Common.Models.RefCommonJobTitleBenefit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RefCommonJobTitleId")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RefCommonJobTitleId");

                    b.ToTable("RefCommonJobTitleBenefit");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Permalink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Candidate.CandidateProfileStyle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CandidateProfileStyles");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Candidate.PortfolioStyle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PortfolioStyles");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Common.RefCJTDescriptionTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("JobLevelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RefCommonJobTitleId")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobLevelId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("RefCommonJobTitleId");

                    b.ToTable("RefCJTDescriptionTemplates");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("AverageSalary")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobDescriptionTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("JobLevelId")
                        .HasColumnType("bigint");

                    b.Property<string>("PluralTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobLevelId");

                    b.ToTable("RefCommonJobTitles");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitleSalary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("JobTitleId")
                        .HasColumnType("bigint");

                    b.Property<string>("LocationDomain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("StateId");

                    b.ToTable("RefCommonJobTitleSalaries");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Employment.JobContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("ContractCompleted")
                        .HasColumnType("bit");

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("JobContractTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JobContractTypeId");

                    b.ToTable("JobContracts");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Employment.JobContractAuditingRequirement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobContractAuditingRequirements");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Employment.JobContractType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("JobContractTypes");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Employment.JobIndustry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("JobsCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RefCommonJobTitleId")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("RefCommonJobTitleId");

                    b.ToTable("JobIndustries");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Employment.JobLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobLevels");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.HelpSupport.SupportTicketDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("SupportTicketDepartments");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ContinentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContinentRegionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<long>("JobsCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StateId1")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContinentId");

                    b.HasIndex("ContinentRegionId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StateId");

                    b.HasIndex("StateId1");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.Continent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("JobsCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Continents");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.ContinentRegion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ContinentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContinentId1")
                        .HasColumnType("bigint");

                    b.Property<long>("JobsCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContinentId");

                    b.HasIndex("ContinentId1");

                    b.HasIndex("LanguageId");

                    b.ToTable("ContinentRegions");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Capital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ContinentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContinentId1")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContinentRegionId")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultCurrencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Emoji")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmojiU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISO2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISO3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("JobsCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Native")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumericCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TLD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopologyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContinentId");

                    b.HasIndex("ContinentId1");

                    b.HasIndex("ContinentRegionId");

                    b.HasIndex("DefaultCurrencyId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.CountryTimeZone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("GmtOffset")
                        .HasColumnType("bigint");

                    b.Property<string>("GmtOffsetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TzName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CountryTimeZones");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.CountryTranslations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("De")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Es")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("It")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PtBr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.Language", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LocaleTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ContinentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContinentRegionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CountryId1")
                        .HasColumnType("bigint");

                    b.Property<long?>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContinentId");

                    b.HasIndex("ContinentRegionId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryId1");

                    b.HasIndex("LanguageId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.Town", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContinentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ContinentRegionId")
                        .HasColumnType("bigint");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("JobsCount")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StateId")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ContinentId");

                    b.HasIndex("ContinentRegionId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Organisation.CandidateRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CandidateRoles");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Organisation.OrganisationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrganisationTypes");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Platform.PlatformAppVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Version")
                        .HasColumnType("float");

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlatformAppVersions");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Platform.PlatformSubscriptionPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlatformSubscriptionPlans");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Platform.PlatformSubscriptionPlanFeature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<long?>("PlatformSubscriptionPlanId")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlatformSubscriptionPlanFeatures");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Platform.PlatformSubscriptionPlanPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlanId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PlanId");

                    b.ToTable("PlatformSubscriptionPlanPrices");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Pricing.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Project.ProjectType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypes");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.CommonServiceReference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ServiceCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommonServiceReferences");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.EntertainmentCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("EntertainmentCategories");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.Genre.EntertainmentGenre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("EntertainmentGenres");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.Genre.LiteratureGenre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("LiteratureGenres");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.Genre.MusicGenre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("MusicGenres");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.ServiceCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("JobIndustryRefId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobIndustryRefId");

                    b.HasIndex("ParentId");

                    b.ToTable("ServiceCategories");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.ServiceTag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceTags");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.ServiceTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceTemplates");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.ServiceTemplateEntertainmentForm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntertainmentTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntertainmentTypeId");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("ServiceTemplateEntertainmentForms");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.ServiceTemplateEntertainmentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemName")
                        .IsUnique();

                    b.ToTable("ServiceTemplateEntertainmentTypes");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Skills.CandidateSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Excerpt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PrimaryJobIndustryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RefCommonJobTitleId")
                        .HasColumnType("bigint");

                    b.Property<string>("SkillIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalSkillCredits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryJobIndustryId")
                        .IsUnique()
                        .HasFilter("[PrimaryJobIndustryId] IS NOT NULL");

                    b.HasIndex("RefCommonJobTitleId");

                    b.ToTable("CandidateSkills");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Skills.CandidateSoftSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("JobIndustryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobIndustryId");

                    b.ToTable("CandidateSoftSkills");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Skills.SkillCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("CandidateSkillId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateSkillId");

                    b.ToTable("SkillCategories");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PlatformSubscriptionPlanPlatformSubscriptionPlanFeature", b =>
                {
                    b.Property<long>("FeaturesId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlansId")
                        .HasColumnType("bigint");

                    b.HasKey("FeaturesId", "PlansId");

                    b.HasIndex("PlansId");

                    b.ToTable("PlatformSubscriptionPlanPlatformSubscriptionPlanFeature");
                });

            modelBuilder.Entity("CandidateSkillJobIndustry", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Employment.JobIndustry", null)
                        .WithMany()
                        .HasForeignKey("JobIndustriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Skills.CandidateSkill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CommonServiceReferenceServiceCategory", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Services.CommonServiceReference", null)
                        .WithMany()
                        .HasForeignKey("CommonServiceReferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Services.ServiceCategory", null)
                        .WithMany()
                        .HasForeignKey("ServiceCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CountryCountryTimeZone", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Country", null)
                        .WithMany()
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.CountryTimeZone", null)
                        .WithMany()
                        .HasForeignKey("TimeZonesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Common.Models.RefCommonJobTitleBenefit", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitle", null)
                        .WithMany("Benefits")
                        .HasForeignKey("RefCommonJobTitleId");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Common.RefCJTDescriptionTemplate", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Employment.JobLevel", "JobLevel")
                        .WithMany()
                        .HasForeignKey("JobLevelId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitle", "RefCommonJobTitle")
                        .WithMany("Descriptions")
                        .HasForeignKey("RefCommonJobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobLevel");

                    b.Navigation("Language");

                    b.Navigation("RefCommonJobTitle");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitle", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Employment.JobLevel", "JobLevel")
                        .WithMany()
                        .HasForeignKey("JobLevelId");

                    b.Navigation("JobLevel");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitleSalary", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Location.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Pricing.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitle", "JobTitle")
                        .WithMany("Salaries")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Currency");

                    b.Navigation("JobTitle");

                    b.Navigation("State");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Employment.JobContract", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Employment.JobContractType", "JobContractType")
                        .WithMany()
                        .HasForeignKey("JobContractTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobContractType");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Employment.JobIndustry", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Employment.JobIndustry", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitle", null)
                        .WithMany("JobIndustries")
                        .HasForeignKey("RefCommonJobTitleId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.City", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Continent", "Continent")
                        .WithMany()
                        .HasForeignKey("ContinentId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.ContinentRegion", "ContinentRegion")
                        .WithMany()
                        .HasForeignKey("ContinentRegionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.State", null)
                        .WithMany("Cities")
                        .HasForeignKey("StateId1");

                    b.Navigation("Continent");

                    b.Navigation("ContinentRegion");

                    b.Navigation("Country");

                    b.Navigation("Language");

                    b.Navigation("State");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.Continent", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.ContinentRegion", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Continent", "Continent")
                        .WithMany()
                        .HasForeignKey("ContinentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Continent", null)
                        .WithMany("Regions")
                        .HasForeignKey("ContinentId1");

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Continent");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.Country", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Continent", "Continent")
                        .WithMany()
                        .HasForeignKey("ContinentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Continent", null)
                        .WithMany("Countries")
                        .HasForeignKey("ContinentId1");

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.ContinentRegion", "ContinentRegion")
                        .WithMany()
                        .HasForeignKey("ContinentRegionId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Pricing.Currency", "DefaultCurrency")
                        .WithMany()
                        .HasForeignKey("DefaultCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Continent");

                    b.Navigation("ContinentRegion");

                    b.Navigation("DefaultCurrency");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.CountryTranslations", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Country", "Country")
                        .WithMany("Translations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.State", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Continent", "Continent")
                        .WithMany()
                        .HasForeignKey("ContinentId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.ContinentRegion", "ContinentRegion")
                        .WithMany()
                        .HasForeignKey("ContinentRegionId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Country", null)
                        .WithMany("States")
                        .HasForeignKey("CountryId1");

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Continent");

                    b.Navigation("ContinentRegion");

                    b.Navigation("Country");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.Town", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Location.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Continent", "Continent")
                        .WithMany()
                        .HasForeignKey("ContinentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.ContinentRegion", "ContinentRegion")
                        .WithMany()
                        .HasForeignKey("ContinentRegionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Location.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("City");

                    b.Navigation("Continent");

                    b.Navigation("ContinentRegion");

                    b.Navigation("Country");

                    b.Navigation("State");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Platform.PlatformSubscriptionPlanPrice", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Pricing.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Platform.PlatformSubscriptionPlan", "Plan")
                        .WithMany("Pricing")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.ServiceCategory", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Employment.JobIndustry", "JobIndustryRef")
                        .WithMany()
                        .HasForeignKey("JobIndustryRefId");

                    b.HasOne("HenwoniDataModifierAPI.Models.Services.ServiceCategory", "Parent")
                        .WithMany("SubServiceCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("JobIndustryRef");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.ServiceTemplateEntertainmentForm", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Services.ServiceTemplateEntertainmentType", "EntertainmentType")
                        .WithMany("Forms")
                        .HasForeignKey("EntertainmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntertainmentType");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Skills.CandidateSkill", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Employment.JobIndustry", "PrimaryJobIndustry")
                        .WithOne()
                        .HasForeignKey("HenwoniDataModifierAPI.Models.Skills.CandidateSkill", "PrimaryJobIndustryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitle", null)
                        .WithMany("CandidateSkills")
                        .HasForeignKey("RefCommonJobTitleId");

                    b.Navigation("PrimaryJobIndustry");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Skills.CandidateSoftSkill", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Employment.JobIndustry", null)
                        .WithMany("SoftSkills")
                        .HasForeignKey("JobIndustryId");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Skills.SkillCategory", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Skills.CandidateSkill", null)
                        .WithMany("Categories")
                        .HasForeignKey("CandidateSkillId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlatformSubscriptionPlanPlatformSubscriptionPlanFeature", b =>
                {
                    b.HasOne("HenwoniDataModifierAPI.Models.Platform.PlatformSubscriptionPlanFeature", null)
                        .WithMany()
                        .HasForeignKey("FeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HenwoniDataModifierAPI.Models.Platform.PlatformSubscriptionPlan", null)
                        .WithMany()
                        .HasForeignKey("PlansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Common.RefCommonJobTitle", b =>
                {
                    b.Navigation("Benefits");

                    b.Navigation("CandidateSkills");

                    b.Navigation("Descriptions");

                    b.Navigation("JobIndustries");

                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Employment.JobIndustry", b =>
                {
                    b.Navigation("SoftSkills");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.Continent", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("Regions");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.Country", b =>
                {
                    b.Navigation("States");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Location.State", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Platform.PlatformSubscriptionPlan", b =>
                {
                    b.Navigation("Pricing");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.ServiceCategory", b =>
                {
                    b.Navigation("SubServiceCategories");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Services.ServiceTemplateEntertainmentType", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("HenwoniDataModifierAPI.Models.Skills.CandidateSkill", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
